/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * <p>
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * <p>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 **/

class Solution {
    public static long fiboEvenSum(int maxNumber) {
        int currentSequence = 1;        // Currently considering fibonacci sequence
        int nextSequence;               // Next fibonacci sequence
        int currentEvenSequence = 2;    // Currently considering fibonacci even-valued sequence
        long sum = 0;

        // loop to calculate the sum of even-valued in Fibonacci sequence not exceed maxNumber
        // ex:
        //   consider, currentSequence = 5
        //   then, nextSequence = 21
        //   then, currentEvenSequence = 34;
        while (currentEvenSequence < maxNumber) {

            // calculate the sum of even sequence
            sum += currentEvenSequence;

            // calculate next sequence [current fibonacci sequence + (current fibonacci even valued sequence * 2)]
            nextSequence = currentSequence + (currentEvenSequence * 2);

            // calculate the next even valued sequence
            currentEvenSequence = nextSequence + currentSequence + currentEvenSequence;

            // consider current sequence as calculated new sequence
            currentSequence = nextSequence;
        }
        return sum;
    }

    public static void main(String[] args) {
        long sum = fiboEvenSum(4000000);
        System.out.println(sum);
    }
}
